@{
    var X = Html.X();
}

@functions {
    // This allows returning a plain string out of a @<text></text> block!
    string StringifyRazorText(Func<object, object> contents)
    {
        return contents(null).ToString();
    }
}

@(
    X.Container()
        .Layout(LayoutType.Fit)
        .ID("funcCtn")
        .Items(
            X.Panel()
                .ID("IntroPanel")
                .Padding(10)
                .Items(
                    X.Button()
                        .Text("Console")
                        .UI(ButtonUI.Confirm)
                        .MarginSpec("0 0 10 0")
                        .Handler("this.showTouchPanel();")
                        .PreInit(new JFunction()
                        {
                            /* 
                             * We will bind the function to the button itself, so it is available on its
                             * context for the click handler above.
                             * We trick Visual Studio to allow syntax highlighting in the JavaScript code.
                             */
                            Handler = StringifyRazorText(@<text>/*<script>//*/
                                this.showTouchPanel = function () {
                                    App.IntroPanel.hide();
                                    App.TouchPanel.show();
                                };
                            /*</script>*/</text>)
                        }),
                    X.Component()
                        .Html(@<text>
                            <p>
                                Ext.NET Mobile comes with a multitude of touch
                                events available on components. Included touch
                                events that can be used are:
                            </p>
                            <ul>
                                <li>touchstart</li>
                                <li>touchmove</li>
                                <li>touchend</li>
                                <li>dragstart</li>
                                <li>drag</li>
                                <li>dragend</li>
                                <li>tap</li>
                                <li>singletap</li>
                                <li>doubletap</li>
                                <li>longpress</li>
                                <li>swipe</li>
                                <li>pinch (on iOS and Android 3+)</li>
                                <li>rotate (on iOS and Android 3+)</li>
                            </ul>
                        </text>)
                ),
            X.Container()
                .ID("TouchPanel")
                .Hidden(true)
                .LayoutConfig(new VBoxLayoutConfig()
                {
                    Pack = BoxPack.Center,
                    Align = BoxAlign.Stretch
                })
                .Items(
                    X.Container()
                        .ID("touchpad")
                        .Flex(1)
                        .Margin(10)
                        .LayoutConfig(new VBoxLayoutConfig()
                        {
                            Pack = BoxPack.Center,
                            Align = BoxAlign.Stretch
                        })
                        .Items(
                            X.Container()
                                .Html("Touch here!")
                                .PreInit(new JFunction()
                                {
                                    // Here scoping the function is not important. The 'touchpad' component
                                    // will know where to find 'onTouchPadEvent' due to the 'scope' argument!
                                    Handler = StringifyRazorText(@<text>
                                        /* The trick below will allow nice syntax highlighting in VS
                                         * Do not use line comments, only block comments work here.
                                         *<script type="text/javascript">//*/
                                            var onTouchPadEvent = function (e, target, options) {
                                                var scroller = App.logger.getScrollable();

                                                App.logger.innerHtmlElement.createChild({ html: e.type });

                                                setTimeout(function () {
                                                    scroller.scrollTo(0, scroller.getSize().y - scroller.getClientSize().y);
                                                }, 50);
                                            };

                                            Ext.get('touchpad').on({
                                                scope: this,
                                                touchstart: onTouchPadEvent,
                                                touchend: onTouchPadEvent,
                                                touchmove: onTouchPadEvent,
                                                swipe: onTouchPadEvent,
                                                dragstart: onTouchPadEvent,
                                                drag: onTouchPadEvent,
                                                dragendd: onTouchPadEvent,
                                                tap: onTouchPadEvent,
                                                singletap: onTouchPadEvent,
                                                doubletap: onTouchPadEvent,
                                                longpress: onTouchPadEvent,
                                                pinch: onTouchPadEvent,
                                                rotate: onTouchPadEvent
                                            });
                                        /*</script>*/
                                    </text>)
                                })
                        ),
                    X.Container()
                        .Layout(LayoutType.Fit)
                        .Flex(1)
                        .Items(
                            X.Toolbar()
                                .UIName("light")
                                .Docked(Dock.Top)
                                .Title("Event Log"),
                            X.Container()
                                .ID("logger")
                                .Scrollable(ScrollableOption.Both)
                                .StyleHtmlContent(true)
                                .Padding(10)
                                .Html(@<text>
                                    <span>Try using gestures on the indicated area to see how events are fired.</span>
                                </text>)
                        )
                )
        )
)