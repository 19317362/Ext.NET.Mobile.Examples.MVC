@{
    var X = Html.X();
    var sourceFormatting = ((GlobalConfig)System.Web.Configuration.WebConfigurationManager.GetSection("extnetmobile")).SourceFormatting;

    var celsiusGetFn = MvcUtils.StringifyScriptBlock(
    @<text>
        <script>
            return Ext.Number.correctFloat(get('kelvin') - 273.15);
        </script>
    </text>, sourceFormatting);

    var celsiusSetFn = MvcUtils.StringifyScriptBlock(
    @<text>
        <script>
            this.set('kelvin', Ext.Number.correctFloat(v + 273.15));
        </script>
    </text>, sourceFormatting);

    var fahrenGetFn = MvcUtils.StringifyScriptBlock(
    @<text>
        <script>
            return Ext.Number.correctFloat(get('celsius') * 1.8 + 32);
        </script>
    </text>, sourceFormatting);

    var fahrenSetFn = MvcUtils.StringifyScriptBlock(
    @<text>
        <script>
            this.set('celsius', Ext.Number.correctFloat((v - 32) / 1.8));
        </script>
    </text>, sourceFormatting);

    var model = new
    {
        formulas = new
        {
            // The calls to correctFloat here are to preserve the stability
            // of the values, we don't want precision rounding to cause the
            // viewmodel to think the data is different.
            celsius = new
            {
                get = new JFunction(celsiusGetFn, "get"),
                set = new JFunction(celsiusSetFn, "v")
            },
            fahrenheit = new
            {
                get = new JFunction(fahrenGetFn, "get"),
                set = new JFunction(fahrenSetFn, "v")
            }
        },
        data = new
        {
            kelvin = 300.1
        }
    };
}

@(
    X.FormPanel()
        .ViewModel(model)
        .Items(
            X.FieldSet()
                .Instructions(
                @<text>
                    The Celsius value is calculated from Kelvin. When the Celsius value changes,
                    the Kelvin value is updated via the formula. The Fahrenheight value is calculated
                    from Celsius. When the Fahrenheit value changes, the Celsius value is updated via
                    the formula.
                </text>)
                .Items(
                    X.SpinnerField()
                        .Label("Kelvin °")
                        .StepValue(0.1)
                        .BindString("{kelvin}"),
                    X.SpinnerField()
                        .Label("Fahrenheit °")
                        .StepValue(0.1)
                        .BindString("{fahrenheit}"),
                    X.SpinnerField()
                        .Label("Celsius °")
                        .StepValue(0.1)
                        .BindString("{celsius}")
                )
        )
)